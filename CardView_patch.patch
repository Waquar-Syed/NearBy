Index: app/src/main/java/in/nj/nearby/common/interfaces/listeners/PosButtons.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/in/nj/nearby/common/interfaces/listeners/PosButtons.java	(revision )
+++ app/src/main/java/in/nj/nearby/common/interfaces/listeners/PosButtons.java	(revision )
@@ -0,0 +1,17 @@
+package in.nj.nearby.common.interfaces.listeners;
+
+import android.view.View;
+
+/**
+ * Created by nitesh on 07-12-2017.
+ */
+
+public interface PosButtons {
+
+    public static interface OnNavigationClickListener extends View.OnClickListener {
+    }
+    public static interface OnShareClickListener extends View.OnClickListener{
+    }
+    public static interface OnCallClickListener extends View.OnClickListener{
+    }
+}
Index: app/src/main/res/layout/activity_map.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_map.xml	(revision c6e391dbce5104eeb8281945fefe051695bc4a09)
+++ app/src/main/res/layout/activity_map.xml	(revision )
@@ -1,60 +1,70 @@
 <?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:id="@+id/main_activity_container"
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
     android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:orientation="vertical"
-    android:background="#000">
-    <TextView
-        android:id="@+id/latitude_text"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="10dp"
-        android:layout_marginStart="10dp"
-        android:visibility="gone"
-        android:textIsSelectable="true"/>
+    android:layout_height="match_parent">
+
+    <LinearLayout android:id="@+id/main_activity_container"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:orientation="vertical"
+        android:background="#000">
+        <TextView
+            android:id="@+id/latitude_text"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginLeft="10dp"
+            android:layout_marginStart="10dp"
+            android:visibility="gone"
+            android:textIsSelectable="true"/>
 
-    <TextView
-        android:id="@+id/longitude_text"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="10dp"
-        android:layout_marginStart="10dp"
-        android:visibility="gone"
-        android:textIsSelectable="true" />
+        <TextView
+            android:id="@+id/longitude_text"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginLeft="10dp"
+            android:layout_marginStart="10dp"
+            android:visibility="gone"
+            android:textIsSelectable="true" />
 
-    <android.support.v7.widget.CardView
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:elevation="6dp"
-        android:padding="4dp"
-        android:layout_margin="4dp">
+        <android.support.v7.widget.CardView
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:elevation="6dp"
+            android:padding="4dp"
+            android:layout_margin="4dp">
 
-        <TextView
-            android:id="@+id/search"
-            android:layout_width="match_parent"
-            android:layout_height="22dp"
-            android:hint="Search"
-            android:textColor="@color/grey_blue"
-            android:textStyle="bold"
-            android:layout_margin="10dp"
-            android:drawableLeft="@drawable/search"/>
+            <TextView
+                android:id="@+id/search"
+                android:layout_width="match_parent"
+                android:layout_height="22dp"
+                android:hint="Search"
+                android:textColor="@color/grey_blue"
+                android:textStyle="bold"
+                android:layout_margin="10dp"
+                android:drawableLeft="@drawable/search"/>
 
 
-    </android.support.v7.widget.CardView>
-    <android.support.v7.widget.CardView
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:elevation="6dp"
-        android:layout_margin="4dp">
-        <fragment
-            android:id="@+id/map"
-            android:name="in.nj.nearby.views.LocationActivity"
-            android:layout_width="match_parent"
-            android:layout_gravity="center"
-            android:layout_height="match_parent"
-            class="com.google.android.gms.maps.SupportMapFragment"
-            />
-    </android.support.v7.widget.CardView>
+        </android.support.v7.widget.CardView>
+        <android.support.v7.widget.CardView
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:elevation="6dp"
+            android:layout_margin="4dp">
+            <fragment
+                android:id="@+id/map"
+                android:name="in.nj.nearby.views.LocationActivity"
+                android:layout_width="match_parent"
+                android:layout_gravity="center"
+                android:layout_height="match_parent"
+                class="com.google.android.gms.maps.SupportMapFragment"
+                />
+        </android.support.v7.widget.CardView>
 
-</LinearLayout>
\ No newline at end of file
+    </LinearLayout>
+
+    <include
+        android:id="@+id/posDialog"
+        layout="@layout/layout_dialog_poslist"
+        android:visibility="gone"/>
+
+</FrameLayout>
Index: app/src/main/java/in/nj/nearby/common/AppConstants.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/in/nj/nearby/common/AppConstants.java	(revision c6e391dbce5104eeb8281945fefe051695bc4a09)
+++ app/src/main/java/in/nj/nearby/common/AppConstants.java	(revision )
@@ -1,9 +1,16 @@
 package in.nj.nearby.common;
 
+import android.util.Log;
+import android.view.View;
+
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Random;
 
+import in.nj.nearby.common.interfaces.listeners.PosButtons;
+import in.nj.nearby.model.Location;
+import in.nj.nearby.model.POSModel;
+
 /**
  * Created by hp on 30-11-2017.
  */
@@ -25,6 +32,58 @@
         return items;
     }
 
+    public static List<POSModel> getpPosModels(){
+        List<POSModel> posModels = new ArrayList<>();
+        POSModel posModel1 = new POSModel("title","address","offer","catagory");
+        POSModel posModel2 = new POSModel("title","address","offer","catagory");
+        /*POSModel posModel3 = new POSModel("title","address","offer","catagory");
+        POSModel posModel4 = new POSModel("title","address","offer","catagory");
+        posModels.add(posModel1);
+        posModels.add(posModel1);
+        posModels.add(posModel1);*/
+        posModel1.setOnCallClickListener(new PosButtons.OnCallClickListener() {
+            @Override
+            public void onClick(View view) {
+                Log.d("CALLCLICK","hanji");
+            }
+        });
+        posModel1.setOnNavigationClickListener(new PosButtons.OnNavigationClickListener() {
+            @Override
+            public void onClick(View view) {
+                Log.d("NavigationCLICK","hanji");
+            }
+        });
+        posModel1.setOnShareClickListener(new PosButtons.OnShareClickListener() {
+            @Override
+            public void onClick(View view) {
+                Log.d("shareCLICK","hanji");
+            }
+        });
+
+        posModel2.setOnCallClickListener(new PosButtons.OnCallClickListener() {
+            @Override
+            public void onClick(View view) {
+                Log.d("CALLCLICK","hanji");
+            }
+        });
+        posModel2.setOnNavigationClickListener(new PosButtons.OnNavigationClickListener() {
+            @Override
+            public void onClick(View view) {
+                Log.d("NavigationCLICK","hanji");
+            }
+        });
+        posModel2.setOnShareClickListener(new PosButtons.OnShareClickListener() {
+            @Override
+            public void onClick(View view) {
+                Log.d("shareCLICK","hanji");
+            }
+        });
+
+        posModels.add(posModel1);
+        posModels.add(posModel2);
+        return posModels;
+    }
+
     public static String getOffer(){
         Random random = new Random();
         int val = random.nextInt(OFFERS.length);
@@ -33,4 +92,11 @@
 
     public static final String GET_ADDRESS_URL = "https://maps.googleapis.com/maps/api/geocode/json?";
     public static final String GET_POS_URL = "http://192.168.43.228:8080/api/getPOS?";
+
+    public static android.location.Location getFixedLocation(){
+        android.location.Location location = new android.location.Location("FixedLocation");
+        location.setLongitude(-0.210521);
+        location.setLatitude(51.461561);
+        return location;
+    }
 }
Index: app/src/main/java/in/nj/nearby/views/LocationActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/in/nj/nearby/views/LocationActivity.java	(revision c6e391dbce5104eeb8281945fefe051695bc4a09)
+++ app/src/main/java/in/nj/nearby/views/LocationActivity.java	(revision )
@@ -7,6 +7,8 @@
 import android.content.Intent;
 import android.content.IntentSender;
 import android.content.pm.PackageManager;
+import android.graphics.Color;
+import android.graphics.drawable.ColorDrawable;
 import android.location.Location;
 import android.net.Uri;
 import android.os.Bundle;
@@ -70,18 +72,21 @@
 import in.nj.nearby.BuildConfig;
 import in.nj.nearby.R;
 import in.nj.nearby.common.AppConstants;
+import in.nj.nearby.common.adapters.POSItemsListAdapter;
 import in.nj.nearby.common.adapters.SearchListAdapter;
+import in.nj.nearby.common.interfaces.listeners.PosButtons;
 import in.nj.nearby.common.interfaces.listeners.ServiceResponseListener;
 import in.nj.nearby.model.Coordinates;
 import in.nj.nearby.model.POS;
 import in.nj.nearby.model.POSDetails;
+import in.nj.nearby.model.POSModel;
 import in.nj.nearby.services.ServerCommunication;
 
 /**
  * Created by hp on 30-11-2017.
  */
 
-public class LocationActivity extends AppCompatActivity implements OnMapReadyCallback, GoogleMap.OnMarkerDragListener{
+public class LocationActivity extends AppCompatActivity implements OnMapReadyCallback{
     private static final String TAG = LocationActivity.class.getSimpleName();
 
     private GoogleMap gMap;
@@ -223,6 +228,8 @@
                 createDialog();
             }
         });
+        posDialog = (View)findViewById(R.id.posDialog);
+        createMarkersDialog(null,0);
     }
 
     private void createDialog(){
@@ -316,13 +323,36 @@
         });
     }
 
+    List<POSModel> posModelList;
     private void getCoordinatesForPosList(POS pos) {
+        posModelList = new ArrayList<>();
         for(POSDetails posDetails : pos.getPos()){
-            getLatLngForAddress(posDetails.getOUTER_POSTAL_CODE() + posDetails.getINNER_POSTAL_CODE(),posDetails.getM_NAME(),posDetails.getMCC_DSC());
+            POSModel posModel = new POSModel(posDetails.getM_NAME(),posDetails.getOUTER_POSTAL_CODE() + posDetails.getINNER_POSTAL_CODE(),
+                    AppConstants.getOffer(),posDetails.getMID());
+            posModel.setOnCallClickListener(new PosButtons.OnCallClickListener() {
+                @Override
+                public void onClick(View view) {
+                    Log.d("CALLCLICK","hanji");
+                }
+            });
+            posModel.setOnNavigationClickListener(new PosButtons.OnNavigationClickListener() {
+                @Override
+                public void onClick(View view) {
+                    Log.d("NavigationCLICK","hanji");
+                }
+            });
+            posModel.setOnShareClickListener(new PosButtons.OnShareClickListener() {
+                @Override
+                public void onClick(View view) {
+                    Log.d("shareCLICK","hanji");
+                }
+            });
+            posModelList.add(posModel);
+            getLatLngForAddress(posDetails.getOUTER_POSTAL_CODE() + posDetails.getINNER_POSTAL_CODE(),posDetails.getM_NAME(),posDetails.getMCC_DSC(),posModel);
         }
     }
 
-    private void getLatLngForAddress(String address, final String mName, final String desc) {
+    private void getLatLngForAddress(String address, final String mName, final String desc, final POSModel posModel) {
         final Map<String, String> parameter = new HashMap<>();
         parameter.put("address",address);
         parameter.put("key","AIzaSyCWcjr8FbpiGxerhFjKRWJH0j6LEl9A4OU");
@@ -339,7 +369,7 @@
                 Gson gson = new Gson();
 
                 Coordinates latLng = gson.fromJson(response.toString(), Coordinates.class);
-                setMarkersOnMap(latLng.getResults().get(0).getFormatted_address(), latLng.getResults().get(0).getGeometry().getLocation(),mName,desc);
+                setMarkersOnMap(latLng.getResults().get(0).getFormatted_address(), latLng.getResults().get(0).getGeometry().getLocation(),mName,desc,posModel);
             }
         });
     }
@@ -348,7 +378,7 @@
         return null;
     }
 
-    private void setMarkersOnMap(String formatted_address, in.nj.nearby.model.Location location,String mName,String desc) {
+    private void setMarkersOnMap(String formatted_address, in.nj.nearby.model.Location location,String mName,String desc,POSModel posModel) {
         //remove temporary markers from the map
 
         //clear list of temp markers
@@ -358,14 +388,15 @@
         /*markersOnMap.add(gMap.addMarker(new MarkerOptions().position(new LatLng(18.5540681,73.8798155)).
                 icon(BitmapDescriptorFactory.fromResource(R.drawable.shop))));*/
 
-        MarkerOptions marker = new MarkerOptions().position(new LatLng(location.getLat(),location.getLng()))
+        final MarkerOptions markerOptions = new MarkerOptions().position(new LatLng(location.getLat(),location.getLng()))
                 .icon(BitmapDescriptorFactory.fromResource(getDrawableForDescription(desc)))
                 .anchor(0.5f, 1);
-        marker.snippet(formatted_address);
-        marker.title(mName);
+        markerOptions.snippet(formatted_address);
+        markerOptions.title(mName);
 
+        final Marker marker = gMap.addMarker(markerOptions);
 
-        markersOnMap.add(gMap.addMarker(marker));
+        markersOnMap.add(marker);
 
         LatLngBounds.Builder builder = new LatLngBounds.Builder();
         for(Marker m : markersOnMap){
@@ -381,6 +412,18 @@
         int padding = (int) (width * 0.10);
         CameraUpdate cu = CameraUpdateFactory.newLatLngBounds(bounds, width, height, padding);
         gMap.animateCamera(cu);
+        posModel.setOnNavigationClickListener(new PosButtons.OnNavigationClickListener() {
+            @Override
+            public void onClick(View view) {
+                setNavigationButton(marker);
+            }
+        });
+        posModel.setOnCallClickListener(new PosButtons.OnCallClickListener() {
+            @Override
+            public void onClick(View view) {
+                setShareButton(marker);
+            }
+        });
     }
 
    /* private BitmapDescriptor getBitmapDescriptor(Context context, int id) {
@@ -413,8 +456,8 @@
     GoogleMap.OnMarkerClickListener markerClickListener = new GoogleMap.OnMarkerClickListener() {
         @Override
         public boolean onMarkerClick(final Marker marker) {
-            if(!isCurrentLocation(marker)) {
-                Dialog dialog = new Dialog(LocationActivity.this);
+            if(!marker.equals(markerHashMap.get(AppConstants.CURRENT_LOCATION_KEY))) {
+                /*Dialog dialog = new Dialog(LocationActivity.this);
                 dialog.setContentView(R.layout.info_dialog);
                 dialog.setCancelable(true);
                 TextView title = dialog.findViewById(R.id.title);
@@ -433,7 +476,8 @@
 
                 Button share = dialog.findViewById(R.id.btn_share);
                 setShareButtonClickListener(share, marker);
-                dialog.show();
+                dialog.show();*/
+                createMarkersDialog(posModelList,markersOnMap.indexOf(marker));
                 return true;
             }
             return false;
@@ -696,7 +740,7 @@
           /*  mLastUpdateTimeTextView.setText(String.format(Locale.ENGLISH, "%s: %s",
                     mLastUpdateTimeLabel, mLastUpdateTime));
         */
-            LatLng currentLocation = new LatLng(mCurrentLocation.getLatitude(),mCurrentLocation.getLongitude());
+            /*LatLng currentLocation = new LatLng(mCurrentLocation.getLatitude(),mCurrentLocation.getLongitude());
             if (gMap != null) {
                 if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
                     callForLocationPermission();
@@ -712,7 +756,7 @@
                     gMap.animateCamera(CameraUpdateFactory.newLatLngZoom(currentLocation, 17));
                     zoomToLocationOnlyOnce = true;
                 }
-            }
+            }*/
         }
     }
 
@@ -881,31 +925,80 @@
         gMap = googleMap;
         gMap.setTrafficEnabled(true);
         gMap.setOnMarkerClickListener(markerClickListener);
-        gMap.setOnMarkerDragListener(this);
+        mCurrentLocation = new Location("My Location");
+        mCurrentLocation.setLatitude(51.461561);
+        mCurrentLocation.setLongitude(-0.210521);
         if(mCurrentLocation!=null){
-           LatLng currentLocation = new LatLng(mCurrentLocation.getLatitude(), mCurrentLocation.getLongitude());
+//            LatLng currentLocation = new LatLng(mCurrentLocation.getLatitude(), mCurrentLocation.getLongitude());
 
-            //LatLng currentLocation = new LatLng(51.461561, -0.210521);
+            LatLng currentLocation = new LatLng(51.461561, -0.210521);
             //gMap.clear();
             Marker marker = gMap.addMarker(new MarkerOptions().position(currentLocation).icon(BitmapDescriptorFactory.fromResource(R.drawable.ic_here)));
-            markerHashMap.put(AppConstants.CURRENT_LOCATION_KEY,marker);
-            gMap.moveCamera(CameraUpdateFactory.newLatLngZoom(currentLocation,17));
-        }
-    }
-    @Override
-    public void onMarkerDragStart(Marker marker) {
+            marker.setDraggable(true);
+            gMap.setOnMarkerDragListener(new GoogleMap.OnMarkerDragListener() {
+                @Override
+                public void onMarkerDragStart(Marker marker) {
 
-    }
+                }
 
-    @Override
-    public void onMarkerDrag(Marker marker) {
+                @Override
+                public void onMarkerDrag(Marker marker) {
 
-    }
+                }
 
-    @Override
-    public void onMarkerDragEnd(Marker marker) {
-        System.out.println("lat == " + marker.getPosition().latitude + "  long == "+ marker.getPosition().longitude);
-        mCurrentLocation.setLatitude(marker.getPosition().latitude);
-        mCurrentLocation.setLongitude(marker.getPosition().longitude);
+                @Override
+                public void onMarkerDragEnd(Marker marker) {
+                    if(marker.equals(markerHashMap.get(AppConstants.CURRENT_LOCATION_KEY))){
+                        LatLng latLng = marker.getPosition();
+                        Log.d("DRAGGED Location",latLng.toString());
+                        gMap.animateCamera(CameraUpdateFactory.newLatLngZoom(latLng,17));
+                        //call APis
+                        Location location = new Location("markerLocation");
+                        location.setLatitude(latLng.latitude);
+                        location.setLongitude(latLng.longitude);
+                        double distance = AppConstants.getFixedLocation().distanceTo(location);
+                        Log.d("Distance",distance+"");
+                        getMerchantList(mSearchTextView.getText().toString().split(","));
+                    }
+                }
+            });
+            markerHashMap.put(AppConstants.CURRENT_LOCATION_KEY,marker);
+            gMap.moveCamera(CameraUpdateFactory.newLatLngZoom(currentLocation,17));
+        }
+    }
+
+private View posDialog;
+    RecyclerView posItemRecycleView;
+    void createMarkersDialog(List<POSModel> posModels,int focusPosition){
+       /* final Dialog dialog = new Dialog(LocationActivity.this);
+        dialog.setContentView(R.layout.layout_dialog_poslist);
+       */// dialog.getWindow().setLayout(WindowManager.LayoutParams.MATCH_PARENT, WindowManager.LayoutParams.WRAP_CONTENT);
+        posDialog.setVisibility(View.GONE);
+        posItemRecycleView = findViewById(R.id.recyclerview);
+
+        List<POSModel> items = AppConstants.getpPosModels();
+
+        POSItemsListAdapter adapter = new POSItemsListAdapter(items);
+        RecyclerView.LayoutManager layoutManager = new LinearLayoutManager(getApplicationContext(),LinearLayoutManager.HORIZONTAL,false);
+        posItemRecycleView.setLayoutManager(layoutManager);
+        posItemRecycleView.setItemAnimator(new DefaultItemAnimator());
+        posItemRecycleView.setAdapter(adapter);
+        posDialog.setVisibility(View.VISIBLE);
+        focusPosItem(focusPosition);
+        //dialog.show();
+    }
+
+    void focusPosItem(int position){
+        if(posItemRecycleView!=null){
+            posItemRecycleView.getLayoutManager().scrollToPosition(position);
+        }
+    }
+
+    @Override
+    public void onBackPressed() {
+        if(posDialog!=null && posDialog.getVisibility() == View.VISIBLE){
+            posDialog.setVisibility(View.GONE);
+        }else
+        super.onBackPressed();
     }
 }
\ No newline at end of file
